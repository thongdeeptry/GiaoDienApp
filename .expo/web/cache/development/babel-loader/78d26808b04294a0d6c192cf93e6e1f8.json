{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { images, colors, icons, fontSizes } from \"../../../constants\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { screenWidth } from \"../../../utilies/Device\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction MessengerItem(props) {\n  var onPress = props.onPress;\n  var _props$item = props.item,\n      url = _props$item.url,\n      isSender = _props$item.isSender,\n      messenger = _props$item.messenger,\n      timestamp = _props$item.timestamp,\n      showUrl = _props$item.showUrl;\n  return isSender == false ? _jsxs(TouchableOpacity, {\n    onPress: onPress,\n    style: {\n      marginTop: 5,\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    children: [showUrl == true ? _jsx(Image, {\n      style: {\n        width: 40,\n        height: 40,\n        resizeMode: \"cover\",\n        borderRadius: 20,\n        marginRight: 15,\n        marginStart: 10\n      },\n      source: {\n        uri: url\n      }\n    }) : _jsx(View, {\n      style: {\n        width: 40,\n        height: 40,\n        marginRight: 15,\n        marginStart: 10\n      }\n    }), _jsxs(View, {\n      style: {\n        width: screenWidth * 0.7,\n        flexDirection: \"row\"\n      },\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            color: \"black\",\n            fontSize: fontSizes.h6,\n            paddingVertical: 5,\n            paddingHorizontal: 7,\n            backgroundColor: colors.messenger,\n            borderRadius: 10\n          },\n          children: messenger\n        })\n      }), _jsx(View, {\n        style: {\n          width: 20\n        }\n      })]\n    })]\n  }) : _jsxs(TouchableOpacity, {\n    onPress: onPress,\n    style: {\n      marginTop: 5,\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\",\n      alignItems: \"center\"\n    },\n    children: [_jsxs(View, {\n      style: {\n        width: screenWidth * 0.7,\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\"\n      },\n      children: [_jsx(View, {\n        style: {\n          width: 40\n        }\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            color: \"black\",\n            fontSize: fontSizes.h6,\n            paddingVertical: 5,\n            paddingHorizontal: 7,\n            backgroundColor: colors.messenger,\n            borderRadius: 10\n          },\n          children: messenger\n        })\n      })]\n    }), showUrl == true ? _jsx(Image, {\n      style: {\n        width: 40,\n        height: 40,\n        resizeMode: \"cover\",\n        borderRadius: 20,\n        marginRight: 15,\n        marginStart: 10\n      },\n      source: {\n        uri: url\n      }\n    }) : _jsx(View, {\n      style: {\n        width: 40,\n        height: 40,\n        marginRight: 15,\n        marginStart: 10\n      }\n    })]\n  });\n}\n\nexport default MessengerItem;","map":{"version":3,"names":["React","useState","useEffect","images","colors","icons","fontSizes","Icon","screenWidth","MessengerItem","props","onPress","item","url","isSender","messenger","timestamp","showUrl","marginTop","flexDirection","alignItems","width","height","resizeMode","borderRadius","marginRight","marginStart","uri","color","fontSize","h6","paddingVertical","paddingHorizontal","backgroundColor","justifyContent"],"sources":["D:/All/DuAnTotNghiep_ReactNative/GiaoDienApp/src/layout/product/Messenger/MessengerItem.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { images, colors, icons, fontSizes } from \"../../../constants\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { screenWidth } from \"../../../utilies/Device\";\r\n\r\nfunction MessengerItem(props) {\r\n  const { onPress } = props;\r\n  const { url, isSender, messenger, timestamp, showUrl } = props.item;\r\n  return isSender == false ? (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      style={{\r\n        marginTop: 5,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {showUrl == true ? (\r\n        <Image\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            resizeMode: \"cover\",\r\n            borderRadius: 20,\r\n            marginRight: 15,\r\n            marginStart: 10,\r\n          }}\r\n          source={{\r\n            uri: url,\r\n          }}\r\n        />\r\n      ) : (\r\n        <View\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            marginRight: 15,\r\n            marginStart: 10,\r\n          }}\r\n        />\r\n      )}\r\n      <View\r\n        style={{\r\n          width: screenWidth * 0.7,\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <View>\r\n          <Text\r\n            style={{\r\n              color: \"black\",\r\n              fontSize: fontSizes.h6,\r\n              paddingVertical: 5,\r\n              paddingHorizontal: 7,\r\n              backgroundColor: colors.messenger,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            {messenger}\r\n          </Text>\r\n        </View>\r\n        <View style={{ width: 20 }}></View>\r\n      </View>\r\n      {/* isSender = true */}\r\n    </TouchableOpacity>\r\n  ) : (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      style={{\r\n        marginTop: 5,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          width: screenWidth * 0.7,\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <View style={{ width: 40 }}></View>\r\n        <View>\r\n          <Text\r\n            style={{\r\n              color: \"black\",\r\n              fontSize: fontSizes.h6,\r\n              paddingVertical: 5,\r\n              paddingHorizontal: 7,\r\n              backgroundColor: colors.messenger,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            {messenger}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      {showUrl == true ? (\r\n        <Image\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            resizeMode: \"cover\",\r\n            borderRadius: 20,\r\n            marginRight: 15,\r\n            marginStart: 10,\r\n          }}\r\n          source={{\r\n            uri: url,\r\n          }}\r\n        />\r\n      ) : (\r\n        <View\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            marginRight: 15,\r\n            marginStart: 10,\r\n          }}\r\n        />\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\nexport default MessengerItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}