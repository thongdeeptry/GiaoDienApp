{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { images, colors, icons, fontSizes } from \"../../../constants\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ChatItem(props) {\n  var _props$user = props.user,\n      name = _props$user.name,\n      url = _props$user.url,\n      message = _props$user.message,\n      numberOfUnreadMessages = _props$user.numberOfUnreadMessages,\n      userId = _props$user.userId;\n  var onPress = props.onPress;\n  return _jsxs(TouchableOpacity, {\n    onPress: onPress,\n    style: {\n      height: 80,\n      paddingTop: 20,\n      paddingStart: 10,\n      flexDirection: \"row\"\n    },\n    children: [_jsxs(View, {\n      children: [_jsx(Image, {\n        style: {\n          width: 50,\n          height: 50,\n          resizeMode: \"cover\",\n          borderRadius: 25,\n          marginRight: 15,\n          marginStart: 10\n        },\n        source: {\n          uri: url\n        }\n      }), numberOfUnreadMessages > 0 && _jsx(Text, {\n        style: {\n          backgroundColor: \"red\",\n          position: \"absolute\",\n          right: 7,\n          fontSize: fontSizes.h6 * 0.8,\n          borderRadius: 10,\n          paddingHorizontal: numberOfUnreadMessages > 9 ? 2 : 4,\n          color: \"white\"\n        },\n        children: numberOfUnreadMessages\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"column\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: \"black\",\n          fontSize: fontSizes.h6,\n          fontWeight: \"bold\"\n        },\n        children: name\n      }), _jsx(Text, {\n        style: {\n          color: \"black\",\n          fontSize: fontSizes.h6,\n          color: colors.inactive\n        },\n        children: message\n      })]\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"flex-end\"\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"black\",\n          fontSize: fontSizes.h6 * 0.8,\n          marginRight: 10\n        },\n        children: \"4 minutes ago\"\n      })\n    })]\n  });\n}\n\nexport default ChatItem;","map":{"version":3,"names":["React","useState","useEffect","images","colors","icons","fontSizes","Icon","ChatItem","props","user","name","url","message","numberOfUnreadMessages","userId","onPress","height","paddingTop","paddingStart","flexDirection","width","resizeMode","borderRadius","marginRight","marginStart","uri","backgroundColor","position","right","fontSize","h6","paddingHorizontal","color","fontWeight","inactive","flex","justifyContent","alignItems"],"sources":["D:/All/DuAnTotNghiep_ReactNative/GiaoDienApp/src/layout/product/Chat/ChatItem.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport { images, colors, icons, fontSizes } from \"../../../constants\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\n\r\nfunction ChatItem(props) {\r\n  let { name, url, message, numberOfUnreadMessages, userId } = props.user; //destructuring an object\r\n  const { onPress } = props;\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      style={{\r\n        height: 80,\r\n        paddingTop: 20,\r\n        paddingStart: 10,\r\n        flexDirection: \"row\",\r\n      }}\r\n    >\r\n      <View>\r\n        <Image\r\n          style={{\r\n            width: 50,\r\n            height: 50,\r\n            resizeMode: \"cover\",\r\n            borderRadius: 25,\r\n            marginRight: 15,\r\n            marginStart: 10,\r\n          }}\r\n          source={{\r\n            uri: url,\r\n          }}\r\n        />\r\n        {numberOfUnreadMessages > 0 && (\r\n          <Text\r\n            style={{\r\n              backgroundColor: \"red\",\r\n              position: \"absolute\",\r\n              right: 7,\r\n              fontSize: fontSizes.h6 * 0.8,\r\n              borderRadius: 10,\r\n              paddingHorizontal: numberOfUnreadMessages > 9 ? 2 : 4,\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {numberOfUnreadMessages}\r\n          </Text>\r\n        )}\r\n      </View>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: fontSizes.h6,\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {name}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: fontSizes.h6,\r\n            color: colors.inactive,\r\n          }}\r\n        >\r\n          {message}\r\n        </Text>\r\n      </View>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: fontSizes.h6 * 0.8,\r\n            marginRight: 10,\r\n          }}\r\n        >\r\n          4 minutes ago\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\nexport default ChatItem;\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;AAWA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,SAAhC;AACA,OAAOC,IAAP;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EACvB,kBAA6DA,KAAK,CAACC,IAAnE;EAAA,IAAMC,IAAN,eAAMA,IAAN;EAAA,IAAYC,GAAZ,eAAYA,GAAZ;EAAA,IAAiBC,OAAjB,eAAiBA,OAAjB;EAAA,IAA0BC,sBAA1B,eAA0BA,sBAA1B;EAAA,IAAkDC,MAAlD,eAAkDA,MAAlD;EACA,IAAQC,OAAR,GAAoBP,KAApB,CAAQO,OAAR;EACA,OACE,MAAC,gBAAD;IACE,OAAO,EAAEA,OADX;IAEE,KAAK,EAAE;MACLC,MAAM,EAAE,EADH;MAELC,UAAU,EAAE,EAFP;MAGLC,YAAY,EAAE,EAHT;MAILC,aAAa,EAAE;IAJV,CAFT;IAAA,WASE,MAAC,IAAD;MAAA,WACE,KAAC,KAAD;QACE,KAAK,EAAE;UACLC,KAAK,EAAE,EADF;UAELJ,MAAM,EAAE,EAFH;UAGLK,UAAU,EAAE,OAHP;UAILC,YAAY,EAAE,EAJT;UAKLC,WAAW,EAAE,EALR;UAMLC,WAAW,EAAE;QANR,CADT;QASE,MAAM,EAAE;UACNC,GAAG,EAAEd;QADC;MATV,EADF,EAcGE,sBAAsB,GAAG,CAAzB,IACC,KAAC,IAAD;QACE,KAAK,EAAE;UACLa,eAAe,EAAE,KADZ;UAELC,QAAQ,EAAE,UAFL;UAGLC,KAAK,EAAE,CAHF;UAILC,QAAQ,EAAExB,SAAS,CAACyB,EAAV,GAAe,GAJpB;UAKLR,YAAY,EAAE,EALT;UAMLS,iBAAiB,EAAElB,sBAAsB,GAAG,CAAzB,GAA6B,CAA7B,GAAiC,CAN/C;UAOLmB,KAAK,EAAE;QAPF,CADT;QAAA,UAWGnB;MAXH,EAfJ;IAAA,EATF,EAuCE,MAAC,IAAD;MACE,KAAK,EAAE;QACLM,aAAa,EAAE;MADV,CADT;MAAA,WAKE,KAAC,IAAD;QACE,KAAK,EAAE;UACLa,KAAK,EAAE,OADF;UAELH,QAAQ,EAAExB,SAAS,CAACyB,EAFf;UAGLG,UAAU,EAAE;QAHP,CADT;QAAA,UAOGvB;MAPH,EALF,EAcE,KAAC,IAAD;QACE,KAAK,EAAE;UACLsB,KAAK,EAAE,OADF;UAELH,QAAQ,EAAExB,SAAS,CAACyB,EAFf;UAGLE,KAAK,EAAE7B,MAAM,CAAC+B;QAHT,CADT;QAAA,UAOGtB;MAPH,EAdF;IAAA,EAvCF,EA+DE,KAAC,IAAD;MACE,KAAK,EAAE;QACLO,aAAa,EAAE,QADV;QAELgB,IAAI,EAAE,CAFD;QAGLC,cAAc,EAAE,QAHX;QAILC,UAAU,EAAE;MAJP,CADT;MAAA,UAQE,KAAC,IAAD;QACE,KAAK,EAAE;UACLL,KAAK,EAAE,OADF;UAELH,QAAQ,EAAExB,SAAS,CAACyB,EAAV,GAAe,GAFpB;UAGLP,WAAW,EAAE;QAHR,CADT;QAAA;MAAA;IARF,EA/DF;EAAA,EADF;AAoFD;;AACD,eAAehB,QAAf"},"metadata":{},"sourceType":"module"}