{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { images, colors, icons, fontSizes } from \"../../../constants\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { UIHeader } from \"../../../components\";\nimport ChatItem from \"./ChatItem\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { onAuthStateChanged, firebaseDatabaseRef, firebaseSet, firebaseDatabase, auth, createUserWithEmailAndPassword, sendEmailVerification, child, get, onValue } from \"../../../../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Chat(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var navigation = props.navigation,\n      route = props.route;\n  var navigate = navigation.navigate,\n      goBack = navigation.goBack;\n  useEffect(function () {\n    onValue(firebaseDatabaseRef(firebaseDatabase, \"users\"), function _callee(snapshot) {\n      var snapshotObject, stringUser, myUserId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              debugger;\n\n              if (!snapshot.exists()) {\n                _context.next = 12;\n                break;\n              }\n\n              snapshotObject = snapshot.val();\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 5:\n              stringUser = _context.sent;\n              myUserId = \"1\";\n              debugger;\n              setUsers(Object.keys(snapshotObject).filter(function (item) {\n                return item != myUserId;\n              }).map(function (eachKey) {\n                var eachObject = snapshotObject[eachKey];\n                return {\n                  url: \"https://www.w3schools.com/howto/img_avatar.png\",\n                  name: eachObject.email,\n                  email: eachObject.email,\n                  accessToken: eachObject.accessToken,\n                  numberOfUnreadMessages: 0,\n                  userId: eachKey\n                };\n              }));\n              debugger;\n              _context.next = 13;\n              break;\n\n            case 12:\n              console.log(\"No data available\");\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flexDirection: \"column\"\n    },\n    children: [_jsx(UIHeader, {\n      title: \"Notifications\",\n      leftIconName: \"arrow-left\",\n      rightIconName: \"search\",\n      onPressLeftIcon: function onPressLeftIcon() {\n        alert(\"press left icon\");\n      },\n      onPressRightIcon: function onPressRightIcon() {\n        alert(\"press right icon\");\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingStart: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: \"black\",\n          fontSize: fontSizes.h6,\n          marginStart: 10\n        },\n        children: \"6 unread messages\"\n      }), _jsx(Icon, {\n        name: \"search\",\n        style: {\n          padding: 15\n        },\n        size: 15,\n        color: \"black\",\n        onPress: function onPress() {\n          alert(\"You pressed Delete\");\n        }\n      })]\n    }), _jsx(FlatList, {\n      style: {},\n      data: users,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ChatItem, {\n          onPress: function onPress() {\n            navigate(\"Messenger\", {\n              user: item\n            });\n          },\n          user: item\n        }, item.url);\n      }\n    })]\n  });\n}\n\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","images","colors","icons","fontSizes","Icon","UIHeader","ChatItem","AsyncStorage","onAuthStateChanged","firebaseDatabaseRef","firebaseSet","firebaseDatabase","auth","createUserWithEmailAndPassword","sendEmailVerification","child","get","onValue","Chat","props","users","setUsers","navigation","route","navigate","goBack","snapshot","exists","snapshotObject","val","getItem","stringUser","myUserId","Object","keys","filter","item","map","eachKey","eachObject","url","name","email","accessToken","numberOfUnreadMessages","userId","console","log","flexDirection","alert","justifyContent","alignItems","paddingStart","color","fontSize","h6","marginStart","padding","user"],"sources":["D:/All/DuAnTotNghiep_ReactNative/GiaoDienApp/src/layout/product/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { images, colors, icons, fontSizes } from \"../../../constants\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { UIHeader } from \"../../../components\";\r\nimport ChatItem from \"./ChatItem\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  onAuthStateChanged,\r\n  firebaseDatabaseRef,\r\n  firebaseSet,\r\n  firebaseDatabase,\r\n  auth,\r\n  createUserWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  child,\r\n  get,\r\n  onValue,\r\n} from \"../../../../config\";\r\nfunction Chat(props) {\r\n  const [users, setUsers] = useState([\r\n    // {\r\n    //     url: 'https://randomuser.me/api/portraits/men/70.jpg',\r\n    //     name: 'Amanda Weler',\r\n    //     message: 'Hello, how are you ?',\r\n    //     numberOfUnreadMessages: 3\r\n    // },\r\n  ]);\r\n  const { navigation, route } = props;\r\n  const { navigate, goBack } = navigation;\r\n  useEffect(() => {\r\n    onValue(\r\n      firebaseDatabaseRef(firebaseDatabase, \"users\"),\r\n      async (snapshot) => {\r\n        debugger;\r\n        if (snapshot.exists()) {\r\n          let snapshotObject = snapshot.val();\r\n          let stringUser = await AsyncStorage.getItem(\"user\");\r\n          let myUserId = \"1\";\r\n          debugger;\r\n          setUsers(\r\n            Object.keys(snapshotObject)\r\n              .filter((item) => item != myUserId)\r\n              .map((eachKey) => {\r\n                let eachObject = snapshotObject[eachKey];\r\n                return {\r\n                  //default profile url\r\n                  url: \"https://www.w3schools.com/howto/img_avatar.png\",\r\n                  name: eachObject.email,\r\n                  email: eachObject.email,\r\n                  accessToken: eachObject.accessToken,\r\n                  numberOfUnreadMessages: 0,\r\n                  userId: eachKey,\r\n                };\r\n              })\r\n          );\r\n          debugger;\r\n        } else {\r\n          console.log(\"No data available\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <UIHeader\r\n        title={\"Notifications\"}\r\n        leftIconName={\"arrow-left\"}\r\n        rightIconName={\"search\"}\r\n        onPressLeftIcon={() => {\r\n          alert(\"press left icon\");\r\n        }}\r\n        onPressRightIcon={() => {\r\n          alert(\"press right icon\");\r\n        }}\r\n      />\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          paddingStart: 10,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: \"black\",\r\n            fontSize: fontSizes.h6,\r\n            marginStart: 10,\r\n          }}\r\n        >\r\n          6 unread messages\r\n        </Text>\r\n        <Icon\r\n          name={\"search\"}\r\n          style={{ padding: 15 }}\r\n          size={15}\r\n          color={\"black\"}\r\n          onPress={() => {\r\n            alert(\"You pressed Delete\");\r\n          }}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        style={{}}\r\n        data={users}\r\n        renderItem={({ item }) => (\r\n          <ChatItem\r\n            onPress={() => {\r\n              //alert(`You press item's name: ${item.name}`)\r\n              navigate(\"Messenger\", { user: item });\r\n            }}\r\n            user={item}\r\n            key={item.url}\r\n          />\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}